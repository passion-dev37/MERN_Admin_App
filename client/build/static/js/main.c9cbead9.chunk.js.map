{"version":3,"sources":["components/AppNavbar.js","actions/itemActions.js","actions/types.js","components/ShoppingList.js","reducers/itemReducer.js","reducers/index.js","store.js","components/itemModal.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","setItemsLoading","item","type","payload","ShoppingList","onDeleteClick","id","props","deleteItem","getItems","items","ListGroup","TransitionGroup","map","_id","name","CSSTransition","key","timeout","classNames","ListGroupItem","Button","size","bind","connect","dispatch","axios","get","then","res","data","delete","initialState","loading","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ItemModal","modal","onChange","e","target","value","onSubmit","preventDefault","newItem","addItem","style","marginBottom","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","placeholder","marginTop","block","post","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9cbead9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { render } from \"react-dom\";\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//         isOpen: false\r\n//     };\r\n// }\r\n\r\n  toggle = () => {\r\n      this.setState({\r\n          isOpen: !this.state.isOpen\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n            <Container>\r\n                <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink href=\"https://github.com/MarkZhuVUW\">\r\n                                go to my github\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Container>\r\n\r\n        </Navbar>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default AppNavbar;\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\nexport const getItems = () => dispatch => {\r\n  dispatch(setItemsLoading());\r\n  axios.get(\"/api/items\").then(res =>\r\n    dispatch({\r\n      type: GET_ITEMS,\r\n      payload: res.data\r\n    })\r\n  );\r\n};\r\n\r\nexport const addItem = item => dispatch => {\r\n  axios.post(\"/api/items\", item).then(res =>\r\n    dispatch({\r\n      type: ADD_ITEM,\r\n      payload: res.data\r\n    })\r\n  );\r\n};\r\n\r\nexport const deleteItem = id => dispatch => {\r\n  axios\r\n    .delete(`/api/items/${id}`)\r\n    .then(res => dispatch({ type: DELETE_ITEM, payload: id }));\r\n};\r\n\r\nexport const setItemsLoading = item => {\r\n  return {\r\n    type: ITEMS_LOADING,\r\n    payload: item\r\n  };\r\n};\r\n","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';","import React, { Component } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { getItems, deleteItem } from \"../actions/itemActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass ShoppingList extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getItems();\r\n  }\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteItem(id);\r\n  };\r\n\r\n  render() {\r\n    const { items } = this.props.item;\r\n    return (\r\n      <Container>\r\n        <ListGroup>\r\n          <TransitionGroup className=\"shopping-list\">\r\n            {items.map(({ _id, name }) => (\r\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                  <Button\r\n                    className=\"remove-btn\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={this.onDeleteClick.bind(this, _id)}\r\n                  >\r\n                    &times;\r\n                  </Button>\r\n                  {name}\r\n                </ListGroupItem>\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  getItems: PropTypes.func.isRequired,\r\n  item: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  item: state.item\r\n});\r\nexport default connect(mapStateToProps, { getItems, deleteItem })(ShoppingList);\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"../actions/types\";\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      };\r\n      case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport itemReducer from './itemReducer';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/\";\r\n\r\nimport thunk from 'redux-thunk';\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../actions/itemActions\";\r\n// import uuid from 'uuid';\r\nclass ItemModal extends Component {\r\n  state = {\r\n    modal: false,\r\n    name: \"\"\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const newItem = {\r\n        //   id: uuid(),\r\n          name: this.state.name\r\n      }\r\n\r\n      // add item via addItem action\r\n      this.props.addItem(newItem);\r\n\r\n      // close modal\r\n      this.toggle();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"dark\"\r\n          style={{ marginBottom: \"2rem\" }}\r\n          onClick={this.toggle}\r\n        >\r\n          add item\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n          <ModalHeader toggle={this.toggle}>add to shopping list</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"item\">Item</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"item\"\r\n                  placeholder=\"add shopping item\"\r\n                  onChange={this.onChange}\r\n                ></Input>\r\n                <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\r\n                    add item\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n  const mapStateToProps = state => ({\r\n    item: state.item\r\n  });\r\nexport default connect(mapStateToProps, { addItem })(ItemModal);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ShoppingList from \"./components/ShoppingList\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport ItemModal from \"./components/itemModal\";\nimport { Container } from \"reactstrap\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <AppNavbar />\n        <Container>\n          <ItemModal />\n          <ShoppingList />\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}